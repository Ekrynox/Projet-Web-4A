PRAGMA foreign_keys = off;

-- Table : groups
CREATE TABLE groups (id INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE NOT NULL, name TEXT NOT NULL);

-- Table : groups_users
CREATE TABLE groups_users ("group" INTEGER REFERENCES groups (id) ON DELETE CASCADE NOT NULL, user INTEGER REFERENCES users (id) ON DELETE CASCADE NOT NULL);

-- Table : messages_groups
CREATE TABLE messages_groups (id INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE NOT NULL, user INTEGER REFERENCES users (id) ON DELETE CASCADE NOT NULL, "group" INTEGER REFERENCES groups (id) ON DELETE CASCADE NOT NULL, date DATETIME DEFAULT (CURRENT_TIMESTAMP) NOT NULL, data TEXT NOT NULL DEFAULT ('{}'));

-- Table : messages_users
CREATE TABLE messages_users (id INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE NOT NULL, user INTEGER REFERENCES users (id) ON DELETE CASCADE NOT NULL, user2 INTEGER REFERENCES users (id) ON DELETE CASCADE NOT NULL, date DATETIME DEFAULT (CURRENT_TIMESTAMP) NOT NULL, data TEXT DEFAULT ('{}') NOT NULL);

-- Table : users
CREATE TABLE users (id INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE NOT NULL, email TEXT UNIQUE NOT NULL COLLATE NOCASE, pseudo TEXT NOT NULL, password TEXT NOT NULL, settings TEXT DEFAULT ('{}') NOT NULL);

-- Table : users_friends
CREATE TABLE users_friends (user1 INTEGER REFERENCES users (id) ON DELETE CASCADE NOT NULL, user2 INTEGER REFERENCES users (id) ON DELETE CASCADE NOT NULL);

-- Table : users_pseudo
CREATE VIRTUAL TABLE users_pseudo USING FTS5(pseudo);

PRAGMA foreign_keys = on;
